@model EduVersity.ViewModels.Material.MaterialEditVM

@{
    ViewData["Title"] = "Edit";

}

<h1>Edit</h1>


<form asp-action="EditMaterial" asp-route-Id="@Model.Id" enctype="multipart/form-data">
    <div asp-validation-summary="All" class="text-danger"></div>

    <div class="form-group">
        <label asp-for="Title" class="control-label"></label>
        <input asp-for="Title" class="form-control" />
        <span asp-validation-for="Title" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="FileContent" class="control-label"></label>
        <input asp-for="FileContent" class="form-control" type="file" />
        <span asp-validation-for="FileContent" class="text-danger"></span>
    </div>

    @if (Model.FileLink != null)

    {
        <p>Current file: @Model.FileLink</p>
        <p>If you don't want to update the file, leave the field blank.</p>
    }

    <div class="form-group">
        <label asp-for="CourseId" class="control-label"></label>
        <input asp-for="CourseId" class="form-control" />
        <span asp-validation-for="CourseId" class="text-danger"></span>
    </div>

    <div class="form-group">
        <input type="submit" value="Save" class="btn btn-primary" />
    </div>
</form>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
